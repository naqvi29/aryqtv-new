{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"G:\\\\VOD\\\\digital video\\\\pages\\\\popularplaylists.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useRouter } from \"next/router\";\nimport PropTypes from \"prop-types\";\nimport Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport Link from 'next/link';\nimport Head from 'next/head';\nimport Leaderboard from '../components/Ads/Leaderboard'; // components\n\nvar popularvideos = function popularvideos(props) {\n  _s();\n\n  var _useState = useState(props.data),\n      playlists = _useState[0],\n      setPlaylist = _useState[1];\n\n  var _useState2 = useState(false),\n      isloading = _useState2[0],\n      setisloading = _useState2[1];\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"ARY Digital Popular Playlists\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"section\", {\n      class: \"text-gray-600 body-font bg-black\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"container px-5 py-24 mx-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"center\", {\n          children: /*#__PURE__*/_jsxDEV(Leaderboard, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-wrap\",\n          children: playlists ? playlists.data.map(function (item, i) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-full lg:w-3/12 sm:w-1/12 px-2 py-2\",\n              children: /*#__PURE__*/_jsxDEV(\"center\", {\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  href: {\n                    pathname: \"/playlist/\" + item.vod_dm_playlist\n                  } // state={{ titles: \"item.title\" }}\n                  // as={`video/${item.id}/${item.title}`}\n                  ,\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"Extra cursor-pointer\",\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: item.vod_image\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 54,\n                      columnNumber: 23\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 53,\n                    columnNumber: 21\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 45,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, _this);\n          }) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n}; // This gets called on every request\n\n\n_s(popularvideos, \"yeXnkYR9arcMiUxSSn7ZXBo7MRI=\");\n\nexport var __N_SSP = true;\nexport default popularvideos;","map":{"version":3,"sources":["G:/VOD/digital video/pages/popularplaylists.js"],"names":["React","useState","useEffect","useRouter","PropTypes","Slider","Link","Head","Leaderboard","popularvideos","props","data","playlists","setPlaylist","isloading","setisloading","map","item","i","pathname","vod_dm_playlist","vod_image"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,OAAO,gCAAP;AACA,OAAO,sCAAP;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,WAAP,MAAwB,+BAAxB,C,CAGA;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAAA;;AAAA,kBAEET,QAAQ,CAACS,KAAK,CAACC,IAAP,CAFV;AAAA,MAExBC,SAFwB;AAAA,MAEbC,WAFa;;AAAA,mBAGGZ,QAAQ,CAAC,KAAD,CAHX;AAAA,MAGxBa,SAHwB;AAAA,MAGbC,YAHa;;AAO/B,sBACE;AAAA,4BAME,QAAC,IAAD;AAAA,6BAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,aANF,eAWE;AAAS,MAAA,KAAK,EAAC,kCAAf;AAAA,6BACE;AAAK,QAAA,KAAK,EAAC,8BAAX;AAAA,gCACE;AAAA,iCACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,iBADF,eAIE;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,oBACGH,SAAS,GAAGA,SAAS,CAACD,IAAV,CAAeK,GAAf,CAAmB,UAACC,IAAD,EAAOC,CAAP;AAAA,gCAC9B;AAAK,cAAA,SAAS,EAAC,sCAAf;AAAA,qCAEE;AAAA,uCACE,QAAC,IAAD;AAAM,kBAAA,IAAI,EAAE;AACVC,oBAAAA,QAAQ,EAAE,eAAeF,IAAI,CAACG;AADpB,mBAAZ,CAGA;AAEA;AALA;AAAA,yCAQE;AAAK,oBAAA,SAAS,EAAC,sBAAf;AAAA,2CACE;AAAK,sBAAA,GAAG,EAAEH,IAAI,CAACI;AAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AARF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,qBAD8B;AAAA,WAAnB,CAAH,GAmBN;AApBN;AAAA;AAAA;AAAA;AAAA,iBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aAXF;AAAA,kBADF;AAkDD,CAzDD,C,CA4DA;;;GA5DMZ,a;;;AAyEN,eAAeA,aAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useRouter } from \"next/router\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Slider from \"react-slick\";\r\n\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport Link from 'next/link';\r\nimport Head from 'next/head';\r\nimport Leaderboard from '../components/Ads/Leaderboard';\r\n\r\n\r\n// components\r\n\r\nconst popularvideos = (props) => {\r\n\r\n  const [playlists, setPlaylist] = useState(props.data);\r\n  const [isloading, setisloading] = useState(false);\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n      {/* <h2 className=\"text-2xl mb-5 heading text-white font-semibold leading-normal\">\r\n              {title}\r\n          </h2> */}\r\n\r\n      <Head>\r\n\r\n        <title>ARY Digital Popular Playlists</title>\r\n\r\n      </Head>\r\n      <section class=\"text-gray-600 body-font bg-black\">\r\n        <div class=\"container px-5 py-24 mx-auto\">\r\n          <center>\r\n            <Leaderboard />\r\n          </center>\r\n          <div className=\"flex flex-wrap\">\r\n            {playlists ? playlists.data.map((item, i) =>\r\n              <div className=\"w-full lg:w-3/12 sm:w-1/12 px-2 py-2\">\r\n\r\n                <center>\r\n                  <Link href={{\r\n                    pathname: \"/playlist/\" + item.vod_dm_playlist\r\n                  }}\r\n                  // state={{ titles: \"item.title\" }}\r\n\r\n                  // as={`video/${item.id}/${item.title}`}\r\n\r\n                  >\r\n                    <div className=\"Extra cursor-pointer\">\r\n                      <img src={item.vod_image} />\r\n\r\n                    </div>\r\n                  </Link>\r\n                </center>\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n// This gets called on every request\r\nexport async function getServerSideProps(context) {\r\n  // console.log(context.query);\r\n  const { id } = context.query;\r\n  // Fetch data from external API\r\n  const res = await fetch(process.env.popularplaylist)\r\n  const data = await res.json()\r\n\r\n  // Pass data to the page via props\r\n  return { props: { data } }\r\n}\r\n\r\n\r\nexport default popularvideos;"]},"metadata":{},"sourceType":"module"}