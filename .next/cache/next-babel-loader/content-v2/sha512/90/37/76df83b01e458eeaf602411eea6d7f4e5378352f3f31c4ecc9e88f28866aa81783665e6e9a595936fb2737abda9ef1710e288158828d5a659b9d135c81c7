{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"G:\\\\VOD\\\\nextjs\\\\digital video\\\\components\\\\Sliders\\\\MainSlider.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from 'react';\nimport Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport Link from 'next/link';\nexport default function MainSlider() {\n  const settings = {\n    dots: false,\n    className: \"center\",\n    centerMode: false,\n    navigation: true,\n    infinite: true,\n    autoplay: false,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    pauseOnHover: true,\n    fade: true,\n    borderRadius: 10\n  };\n  const {\n    0: playlists,\n    1: setPlaylist\n  } = useState(null);\n  const {\n    0: isloading,\n    1: setisloading\n  } = useState(false);\n  useEffect(() => {\n    // const count = 0;\n    if (playlists == null) {\n      // alert(props.ids);\n      fetch(process.env.mainslider).then(resp => {\n        resp.json().then(result => {\n          setPlaylist(result);\n          setisloading(true);\n          console.log(result);\n        });\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Slider, _objectSpread(_objectSpread({}, settings), {}, {\n        children: playlists ? playlists.map((item, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            href: item.link,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: item.image\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)) : null\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}","map":{"version":3,"sources":["G:/VOD/nextjs/digital video/components/Sliders/MainSlider.js"],"names":["React","useState","useEffect","Slider","Link","MainSlider","settings","dots","className","centerMode","navigation","infinite","autoplay","speed","slidesToShow","slidesToScroll","pauseOnHover","fade","borderRadius","playlists","setPlaylist","isloading","setisloading","fetch","process","env","mainslider","then","resp","json","result","console","log","map","item","i","link","image"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,OAAO,gCAAP;AACA,OAAO,sCAAP;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAGA,eAAe,SAASC,UAAT,GAAsB;AAEnC,QAAMC,QAAQ,GAAG;AACfC,IAAAA,IAAI,EAAE,KADS;AAEfC,IAAAA,SAAS,EAAE,QAFI;AAGfC,IAAAA,UAAU,EAAE,KAHG;AAIfC,IAAAA,UAAU,EAAE,IAJG;AAKfC,IAAAA,QAAQ,EAAE,IALK;AAMfC,IAAAA,QAAQ,EAAE,KANK;AAOfC,IAAAA,KAAK,EAAE,GAPQ;AAQfC,IAAAA,YAAY,EAAE,CARC;AASfC,IAAAA,cAAc,EAAE,CATD;AAUfC,IAAAA,YAAY,EAAE,IAVC;AAWfC,IAAAA,IAAI,EAAE,IAXS;AAYfC,IAAAA,YAAY,EAAE;AAZC,GAAjB;AAiBA,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA2BnB,QAAQ,CAAC,IAAD,CAAzC;AACD,QAAM;AAAA,OAACoB,SAAD;AAAA,OAAYC;AAAZ,MAA4BrB,QAAQ,CAAC,KAAD,CAA1C;AAECC,EAAAA,SAAS,CAAC,MAAM;AACd;AAEA,QAAGiB,SAAS,IAAI,IAAhB,EAAqB;AACnB;AACDI,MAAAA,KAAK,CAACC,OAAO,CAACC,GAAR,CAAYC,UAAb,CAAL,CAA8BC,IAA9B,CAAoCC,IAAD,IAAU;AAE9CA,QAAAA,IAAI,CAACC,IAAL,GAAYF,IAAZ,CAAkBG,MAAD,IAAY;AAE3BV,UAAAA,WAAW,CAACU,MAAD,CAAX;AACAR,UAAAA,YAAY,CAAC,IAAD,CAAZ;AACAS,UAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AAGH,SAPC;AAUD,OAZE;AAYC;AAEH,GAnBQ,CAAT;AAqBA,sBACE;AAAA,2BACE;AAAA,6BACE,QAAC,MAAD,kCAAYxB,QAAZ;AAAA,kBAECa,SAAS,GAAGA,SAAS,CAACc,GAAV,CAAc,CAACC,IAAD,EAAOC,CAAP,kBACzB;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,IAAI,EAAED,IAAI,CAACE,IAAjB;AAAA,mCACA;AAAK,cAAA,GAAG,EAAEF,IAAI,CAACG;AAAf;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADW,CAAH,GAOJ;AATN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAkBD","sourcesContent":["import React, {useState, useEffect } from 'react';\r\nimport Slider from \"react-slick\";\r\n\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport Link from 'next/link';\r\n\r\n\r\nexport default function MainSlider() {\r\n\r\n  const settings = {\r\n    dots: false,\r\n    className: \"center\",\r\n    centerMode: false,\r\n    navigation: true,\r\n    infinite: true,\r\n    autoplay: false,\r\n    speed: 500,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n    pauseOnHover: true,\r\n    fade: true,\r\n    borderRadius: 10,\r\n\r\n  };\r\n\r\n\r\n  const [playlists, setPlaylist] = useState(null);\r\n\tconst [isloading, setisloading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // const count = 0;\r\n  \r\n    if(playlists == null){ \r\n      // alert(props.ids);\r\n     fetch(process.env.mainslider).then((resp) => {\r\n  \r\n    resp.json().then((result) => {\r\n      \r\n      setPlaylist(result);\r\n      setisloading(true);\r\n      console.log(result)\r\n      \r\n   \r\n  })\r\n  \r\n  \r\n  }) } \r\n  \r\n  })\r\n  \r\n  return (\r\n    <>\r\n      <div>\r\n        <Slider {...settings}>\r\n\r\n        {playlists ? playlists.map((item, i) => (\r\n          <div>\r\n            <Link href={item.link}>\r\n            <img src={item.image} />\r\n            </Link>\r\n          </div>\r\n\r\n          )): null}\t\r\n          \r\n        </Slider>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}