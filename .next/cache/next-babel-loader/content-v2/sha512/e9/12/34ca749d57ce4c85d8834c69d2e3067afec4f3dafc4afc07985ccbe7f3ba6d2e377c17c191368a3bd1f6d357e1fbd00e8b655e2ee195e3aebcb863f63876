{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"G:\\\\VOD\\\\digital video\\\\pages\\\\schedule.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useRouter } from \"next/router\";\nimport PropTypes from \"prop-types\";\nimport Slider from \"react-slick\";\nimport Link from 'next/link';\nimport { Tab } from '@headlessui/react'; // components\n\nfunction classNames() {\n  for (var _len = arguments.length, classes = new Array(_len), _key = 0; _key < _len; _key++) {\n    classes[_key] = arguments[_key];\n  }\n\n  return classes.filter(Boolean).join(' ');\n}\n\nvar schedules = function schedules(props) {\n  _s();\n\n  var _useState = useState(props.data),\n      schedule = _useState[0],\n      setSchedule = _useState[1];\n\n  var _useState2 = useState(false),\n      isloading = _useState2[0],\n      setisloading = _useState2[1];\n\n  var _useState3 = useState(1),\n      openTab = _useState3[0],\n      setOpenTab = _useState3[1];\n\n  console.log(schedule); //  alert(schedule.data);\n\n  var date = new Date();\n  console.log(date.toLocaleString('en-US', {\n    weekday: 'long'\n  }));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      class: \"text-gray-600 body-font bg-black\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"container px-5 py-24 mx-auto\",\n        children: /*#__PURE__*/_jsxDEV(Tab.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Tab.List, {\n            className: \"flex p-1 space-x-1 bg-blue-900/20 rounded-xl xs:break-all\",\n            children: Object.keys(schedule).map(function (category) {\n              return /*#__PURE__*/_jsxDEV(Tab, {\n                className: function className(_ref) {\n                  var selected = _ref.selected;\n                  return classNames('w-full py-2.5 text-lg leading-5 p-1 text-white-700 uppercase font-bold', 'focus:outline-none focus:ring-2 ring-offset-2 ring-offset-blue-400 ring-yellow ring-opacity-60', selected ? 'bg-yellow shadow text-white' : 'text-white hover:bg-yellow hover:text-white');\n                },\n                children: category\n              }, category, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 13\n              }, _this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 9\n          }, _this), /*#__PURE__*/_jsxDEV(Tab.Panels, {\n            className: \"mt-2\",\n            children: Object.values(schedule).map(function (posts, idx) {\n              return /*#__PURE__*/_jsxDEV(Tab.Panel, {\n                className: classNames('rounded-xl p-1', 'focus:outline-none focus:ring-2 ring-offset-2 ring-offset-blue-400 ring-white ring-opacity-60'),\n                children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                  className: \"flex flex-wrap\",\n                  children: posts.map(function (post) {\n                    return /*#__PURE__*/_jsxDEV(\"li\", {\n                      className: \"relative p-1 rounded-md hover:bg-coolGray-100 cursor-pointer\",\n                      children: /*#__PURE__*/_jsxDEV(Link, {\n                        href: post.link,\n                        children: /*#__PURE__*/_jsxDEV(\"img\", {\n                          src: post.image\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 77,\n                          columnNumber: 23\n                        }, _this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 76,\n                        columnNumber: 23\n                      }, _this)\n                    }, post.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 72,\n                      columnNumber: 19\n                    }, _this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 15\n                }, _this)\n              }, idx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 13\n              }, _this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 9\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 3\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 3\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 1\n    }, _this)\n  }, void 0, false);\n}; // This gets called on every request\n\n\n_s(schedules, \"sYXfZxSivMdSgrhOCAAc2/xntJg=\");\n\nexport var __N_SSP = true;\nexport default schedules;","map":{"version":3,"sources":["G:/VOD/digital video/pages/schedule.js"],"names":["React","useState","useEffect","useRouter","PropTypes","Slider","Link","Tab","classNames","classes","filter","Boolean","join","schedules","props","data","schedule","setSchedule","isloading","setisloading","openTab","setOpenTab","console","log","date","Date","toLocaleString","weekday","Object","keys","map","category","selected","values","posts","idx","post","link","image","id"],"mappings":"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","sourcesContent":["import React, {useState, useEffect } from 'react';\r\nimport { useRouter } from \"next/router\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Slider from \"react-slick\";\r\nimport Link from 'next/link';\r\nimport { Tab } from '@headlessui/react'\r\n\r\n// components\r\nfunction classNames(...classes) {\r\n    return classes.filter(Boolean).join(' ')\r\n  }\r\n  \r\nconst schedules = (props) => {\r\n\r\n      const [schedule, setSchedule] = useState(props.data);\r\n      const [isloading, setisloading] = useState(false);\r\n      const [openTab, setOpenTab] = useState(1);\r\n        console.log(schedule);\r\n    //  alert(schedule.data);\r\n      var date = new Date();\r\n      console.log(date.toLocaleString('en-US', {\r\n            weekday: 'long'\r\n          }));\r\n      \r\n         \r\n\r\n          \r\n  return (\r\n    <>\r\n\r\n    \r\n\r\n        {/* <h2 className=\"text-2xl mb-5 heading text-white font-semibold leading-normal\">\r\n              {title}\r\n          </h2> */}\r\n\r\n        \r\n<section class=\"text-gray-600 body-font bg-black\"> \r\n  <div class=\"container px-5 py-24 mx-auto\">\r\n          \r\n  <Tab.Group>\r\n        <Tab.List className=\"flex p-1 space-x-1 bg-blue-900/20 rounded-xl xs:break-all\">\r\n          {Object.keys(schedule).map((category) => (\r\n            <Tab\r\n              key={category}\r\n              className={({ selected }) =>\r\n                classNames(\r\n                  'w-full py-2.5 text-lg leading-5 p-1 text-white-700 uppercase font-bold',\r\n                  'focus:outline-none focus:ring-2 ring-offset-2 ring-offset-blue-400 ring-yellow ring-opacity-60',\r\n                  selected\r\n                    ? 'bg-yellow shadow text-white'\r\n                    : 'text-white hover:bg-yellow hover:text-white'\r\n                )\r\n              }\r\n            >\r\n              {category}\r\n            </Tab>\r\n          ))}\r\n        </Tab.List>\r\n        <Tab.Panels className=\"mt-2\">\r\n          {Object.values(schedule).map((posts, idx) => (\r\n            <Tab.Panel\r\n              key={idx}\r\n              className={classNames(\r\n                'rounded-xl p-1',\r\n                'focus:outline-none focus:ring-2 ring-offset-2 ring-offset-blue-400 ring-white ring-opacity-60'\r\n              )}\r\n            >\r\n              <ul className=\"flex flex-wrap\">\r\n                {posts.map((post) => (\r\n                  <li\r\n                    key={post.id}\r\n                    className=\"relative p-1 rounded-md hover:bg-coolGray-100 cursor-pointer\"\r\n                  >\r\n                      <Link href={post.link}>\r\n                      <img src={post.image}/>\r\n                      </Link>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </Tab.Panel>\r\n          ))}\r\n        </Tab.Panels>\r\n      </Tab.Group>\r\n\r\n  {/* <Tabs defaultActiveKey={date.toLocaleString('en-US', {weekday: 'long'})} id=\"uncontrolled-tab-example\" className=\"mb-3\">\r\n        <Tab eventKey=\"Monday\" title=\"Monday\">\r\n         \r\n         \r\n                    <>\r\n                          \r\n                <Row>\r\n\t\t\t\t{schedule ? schedule.monday.map((item, i) => (\r\n                <Col xl={3} sm={6} className=\"mb-3\">\r\n                <Card style={{ width: '100%' }}>\r\n                    <Card.Img variant=\"top\" src={item.image} />\r\n                    <Card.Body>\r\n                        <Card.Title>{item.title}</Card.Title>\r\n                        <Link href={item.link} >\r\n                            <Button variant=\"primary\">Full Playlist</Button>\r\n                        </Link>\r\n                    </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n                )): null }\r\n            </Row>\r\n            </>\r\n           \r\n        </Tab>\r\n        <Tab eventKey=\"Tuesday\" title=\"Tuesday\">\r\n        \r\n\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t\t\r\n\t\t\t\t{schedule ? schedule.monday.map((item, i) => (\r\n                <Col xl={3} sm={6} className=\"mb-3\">\r\n                <Card style={{ width: '100%' }}>\r\n                    <Card.Img variant=\"top\" src={item.image} />\r\n                    <Card.Body>\r\n                        <Card.Title>{item.title}</Card.Title>\r\n                        <Link href={item.link} >\r\n                            <Button variant=\"primary\">Full Playlist</Button>\r\n                        </Link>\r\n                    </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n                )): null }\r\n            </Row>\r\n            \r\n        </Tab>\r\n        <Tab eventKey=\"Wednesday\" title=\"Wednesday\">\r\n       \r\n\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t\t\r\n\t\t\t\t{schedule ? schedule.wednesday.map((item, i) => (\r\n                <Col xl={3} sm={6} className=\"mb-3\">\r\n                <Card style={{ width: '100%' }}>\r\n                    <Card.Img variant=\"top\" src={item.image} />\r\n                    <Card.Body>\r\n                        <Card.Title>{item.title}</Card.Title>\r\n                        <Link href={item.link} >\r\n                            <Button variant=\"primary\">Full Playlist</Button>\r\n                        </Link>\r\n                    </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n                )): null }\r\n            </Row>\r\n           \r\n        </Tab>\r\n        <Tab eventKey=\"Thursday\" title=\"Thursday\">\r\n       \r\n\t\t\t\t<Row>\r\n\t\t\t\t\t\t\r\n\t\t\t\t{schedule ? schedule.thursday.map((item, i) => (\r\n                <Col xl={3} sm={6} className=\"mb-3\">\r\n                <Card style={{ width: '100%' }}>\r\n                    <Card.Img variant=\"top\" src={item.image} />\r\n                    <Card.Body>\r\n                        <Card.Title>{item.title}</Card.Title>\r\n                        <Link href={item.link} >\r\n                            <Button variant=\"primary\">Full Playlist</Button>\r\n                        </Link>\r\n                    </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n                )): null }\r\n            </Row>\r\n           \r\n        </Tab>\r\n        <Tab eventKey=\"Friday\" title=\"Friday\">\r\n        \r\n\t\t\t\t<Row>\r\n\t\t\t\t\t\t\r\n\t\t\t\t{schedule ? schedule.friday.map((item, i) => (\r\n                <Col xl={3} sm={6} className=\"mb-3\">\r\n                <Card style={{ width: '100%' }}>\r\n                    <Card.Img variant=\"top\" src={item.image} />\r\n                    <Card.Body>\r\n                        <Card.Title>{item.title}</Card.Title>\r\n                        <Link href={item.link} >\r\n                            <Button variant=\"primary\">Full Playlist</Button>\r\n                        </Link>\r\n                    </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n                )): null }\r\n            </Row>\r\n            \r\n        </Tab>\r\n        <Tab eventKey=\"Saturday\" title=\"Saturday\">\r\n       \r\n\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t\t\r\n\t\t\t\t{schedule ? schedule.saturday.map((item, i) => (\r\n                <Col xl={3} sm={6} className=\"mb-3\">\r\n                <Card style={{ width: '100%' }}>\r\n                    <Card.Img variant=\"top\" src={item.image} />\r\n                    <Card.Body>\r\n                        <Card.Title>{item.title}</Card.Title>\r\n                        <Link href={item.link} >\r\n                            <Button variant=\"primary\">Full Playlist</Button>\r\n                        </Link>\r\n                    </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n                )): null }\r\n            </Row>\r\n           \r\n        </Tab>\r\n        <Tab eventKey=\"Sunday\" title=\"Sunday\">\r\n      \r\n\t\t\t\t<Row>\r\n\t\t\t\t\t\t\r\n\t\t\t\t{schedule ? schedule.sunday.map((item, i) => (\r\n                <Col xl={3} sm={6} className=\"mb-3\">\r\n                <Card style={{ width: '100%' }}>\r\n                    <Card.Img variant=\"top\" src={item.image} />\r\n                    <Card.Body>\r\n                        <Card.Title>{item.title}</Card.Title>\r\n                        <Link href={item.link} >\r\n                            <Button variant=\"primary\">Full Playlist</Button>\r\n                        </Link>\r\n                    </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n                )): null }\r\n            </Row>\r\n           \r\n        </Tab>\r\n      </Tabs> */}\r\n\r\n \r\n\r\n\r\n  </div>\r\n</section>\r\n\r\n\r\n\r\n     \r\n      \r\n\r\n     \r\n    </>\r\n  );\r\n}\r\n\r\n\r\n\r\n// This gets called on every request\r\nexport async function getServerSideProps(context) {\r\n  // console.log(context.query);\r\n  // Fetch data from external API\r\n  const res = await fetch(process.env.schedule)\r\n  const data = await res.json()\r\n// console.log(data);\r\n  // Pass data to the page via props\r\n  return { props: { data } }\r\n}\r\n\r\n\r\n\r\n\r\nexport default schedules;\r\n\r\n"]},"metadata":{},"sourceType":"module"}