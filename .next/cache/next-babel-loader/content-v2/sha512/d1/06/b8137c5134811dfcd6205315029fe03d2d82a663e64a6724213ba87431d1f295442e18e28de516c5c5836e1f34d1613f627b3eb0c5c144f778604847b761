{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"G:\\\\VOD\\\\digital video\\\\pages\\\\archiveplaylists.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useRouter } from \"next/router\";\nimport PropTypes from \"prop-types\";\nimport Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport Link from 'next/link'; // components\n\nconst popularvideos = props => {\n  const {\n    0: playlists,\n    1: setPlaylist\n  } = useState(props.data);\n  const {\n    0: isloading,\n    1: setisloading\n  } = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      class: \"text-gray-600 body-font bg-black\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"container px-5 py-24 mx-auto\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-wrap\",\n          children: playlists ? playlists.data.map((item, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-full lg:w-3/12 sm:w-6/12 px-2 py-2\",\n            children: /*#__PURE__*/_jsxDEV(\"center\", {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                href: {\n                  pathname: \"/playlist/\" + item.vod_dm_playlist\n                } // state={{ titles: \"item.title\" }}\n                // as={`video/${item.id}/${item.title}`}\n                ,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"Extra cursor-pointer\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: item.vod_image\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 45,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 44,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this)) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}; // This gets called on every request\n\n\nexport async function getServerSideProps(context) {\n  // console.log(context.query);\n  const {\n    id\n  } = context.query; // Fetch data from external API\n\n  const res = await fetch(process.env.archiveplaylist);\n  const data = await res.json(); // Pass data to the page via props\n\n  return {\n    props: {\n      data\n    }\n  };\n}\nexport default popularvideos;","map":{"version":3,"sources":["G:/VOD/digital video/pages/archiveplaylists.js"],"names":["React","useState","useEffect","useRouter","PropTypes","Slider","Link","popularvideos","props","playlists","setPlaylist","data","isloading","setisloading","map","item","i","pathname","vod_dm_playlist","vod_image","getServerSideProps","context","id","query","res","fetch","process","env","archiveplaylist","json"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,OAAO,gCAAP;AACA,OAAO,sCAAP;AACA,OAAOC,IAAP,MAAiB,WAAjB,C,CAGA;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAE/B,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA2BT,QAAQ,CAACO,KAAK,CAACG,IAAP,CAAzC;AACA,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA4BZ,QAAQ,CAAC,KAAD,CAA1C;AAIA,sBACE;AAAA,2BAOE;AAAS,MAAA,KAAK,EAAC,kCAAf;AAAA,6BACE;AAAK,QAAA,KAAK,EAAC,8BAAX;AAAA,+BAEE;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,oBACGQ,SAAS,GAAGA,SAAS,CAACE,IAAV,CAAeG,GAAf,CAAmB,CAACC,IAAD,EAAOC,CAAP,kBAC9B;AAAK,YAAA,SAAS,EAAC,sCAAf;AAAA,mCAEE;AAAA,qCACE,QAAC,IAAD;AAAM,gBAAA,IAAI,EAAE;AACVC,kBAAAA,QAAQ,EAAE,eAAeF,IAAI,CAACG;AADpB,iBAAZ,CAGA;AAEA;AALA;AAAA,uCAOE;AAAK,kBAAA,SAAS,EAAC,sBAAf;AAAA,yCACE;AAAK,oBAAA,GAAG,EAAEH,IAAI,CAACI;AAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,kBADW,CAAH,GAoBN;AArBN;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAPF,mBADF;AA6CD,CApDD,C,CAuDA;;;AACA,OAAO,eAAeC,kBAAf,CAAkCC,OAAlC,EAA2C;AAChD;AACA,QAAM;AAAEC,IAAAA;AAAF,MAASD,OAAO,CAACE,KAAvB,CAFgD,CAGhD;;AACA,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAACC,OAAO,CAACC,GAAR,CAAYC,eAAb,CAAvB;AACA,QAAMjB,IAAI,GAAG,MAAMa,GAAG,CAACK,IAAJ,EAAnB,CALgD,CAOhD;;AACA,SAAO;AAAErB,IAAAA,KAAK,EAAE;AAAEG,MAAAA;AAAF;AAAT,GAAP;AACD;AAGD,eAAeJ,aAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useRouter } from \"next/router\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Slider from \"react-slick\";\r\n\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport Link from 'next/link';\r\n\r\n\r\n// components\r\n\r\nconst popularvideos = (props) => {\r\n\r\n  const [playlists, setPlaylist] = useState(props.data);\r\n  const [isloading, setisloading] = useState(false);\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n      {/* <h2 className=\"text-2xl mb-5 heading text-white font-semibold leading-normal\">\r\n              {title}\r\n          </h2> */}\r\n\r\n\r\n      <section class=\"text-gray-600 body-font bg-black\">\r\n        <div class=\"container px-5 py-24 mx-auto\">\r\n\r\n          <div className=\"flex flex-wrap\">\r\n            {playlists ? playlists.data.map((item, i) =>\r\n              <div className=\"w-full lg:w-3/12 sm:w-6/12 px-2 py-2\">\r\n\r\n                <center>\r\n                  <Link href={{\r\n                    pathname: \"/playlist/\" + item.vod_dm_playlist\r\n                  }}\r\n                  // state={{ titles: \"item.title\" }}\r\n\r\n                  // as={`video/${item.id}/${item.title}`}\r\n                  >\r\n                    <div className=\"Extra cursor-pointer\">\r\n                      <img src={item.vod_image} />\r\n\r\n                    </div>\r\n                  </Link>\r\n\r\n                </center>\r\n\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n// This gets called on every request\r\nexport async function getServerSideProps(context) {\r\n  // console.log(context.query);\r\n  const { id } = context.query;\r\n  // Fetch data from external API\r\n  const res = await fetch(process.env.archiveplaylist)\r\n  const data = await res.json()\r\n\r\n  // Pass data to the page via props\r\n  return { props: { data } }\r\n}\r\n\r\n\r\nexport default popularvideos;"]},"metadata":{},"sourceType":"module"}