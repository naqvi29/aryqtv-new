{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"G:\\\\VOD\\\\nextjs\\\\digital video\\\\pages\\\\playlist\\\\[id].js\";\nimport React, { useState, useEffect } from 'react';\nimport { useRouter } from \"next/router\";\nimport PropTypes from \"prop-types\";\nimport Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport Link from 'next/link';\nimport CardVideosGrid from '../../components/Cards/CardVideosGrid';\nimport Leaderboard from '../../components/Ads/Leaderboard'; // components\n\nconst playlistid = props => {\n  // const router = useRouter()\n  //  const {id} = router.query;\n  const {\n    0: playlists,\n    1: setPlaylist\n  } = useState(props.data);\n  const {\n    0: isloading,\n    1: setisloading\n  } = useState(false); //       useEffect(() => {\n  //         // const count = 0;\n  //         if(playlists == null){ \n  // \t\t\t// alert(props.id);\n  //          fetch('https://api.dailymotion.com/playlist/'+id+'/videos?fields=thumbnail_240_url%2Ctitle%2Cid%2Cviews_total%2Cduration%2Cowner.screenname%2Cowner&limit=9').then((resp) => {\n  //         resp.json().then((result) => {\n  //             setPlaylist(result);\n  // \t\tsetisloading(true);\n  // \t\tconsole.log(result)\n  //   })\n  //   }) }\n  // })\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      class: \"text-gray-600 body-font bg-black\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"container px-5 py-24 mx-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"center\", {\n          children: /*#__PURE__*/_jsxDEV(Leaderboard, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-bold text-white truncate\",\n          children: playlists.list.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardVideosGrid, {\n          category: props.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}; // This gets called on every request\n\n\nexport async function getServerSideProps(context) {\n  // console.log(context.query);\n  const {\n    id\n  } = context.query; // Fetch data from external API\n\n  const res = await fetch('https://api.dailymotion.com/playlist/' + id + '/videos?fields=thumbnail_240_url%2Ctitle%2Cid%2Cviews_total%2Cduration%2Cowner.screenname%2Cowner&limit=100');\n  const data = await res.json(); // Pass data to the page via props\n\n  return {\n    props: {\n      data,\n      id\n    }\n  };\n}\nexport default playlistid;","map":{"version":3,"sources":["G:/VOD/nextjs/digital video/pages/playlist/[id].js"],"names":["React","useState","useEffect","useRouter","PropTypes","Slider","Link","CardVideosGrid","Leaderboard","playlistid","props","playlists","setPlaylist","data","isloading","setisloading","list","title","id","getServerSideProps","context","query","res","fetch","json"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,OAAO,gCAAP;AACA,OAAO,sCAAP;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,cAAP,MAA2B,uCAA3B;AACA,OAAOC,WAAP,MAAwB,kCAAxB,C,CAGA;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAG5B;AACA;AAEA,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA2BX,QAAQ,CAACS,KAAK,CAACG,IAAP,CAAzC;AACA,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA4Bd,QAAQ,CAAC,KAAD,CAA1C,CAP4B,CAS5B;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAGA;AAGA;AAEA;;AAIA,sBACE;AAAA,2BAOE;AAAS,MAAA,KAAK,EAAC,kCAAf;AAAA,6BACE;AAAK,QAAA,KAAK,EAAC,8BAAX;AAAA,gCACE;AAAA,iCACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAI,UAAA,SAAS,EAAC,uCAAd;AAAA,oBACGU,SAAS,CAACK,IAAV,CAAeC;AADlB;AAAA;AAAA;AAAA;AAAA,gBAJF,eAyCE,QAAC,cAAD;AAAgB,UAAA,QAAQ,EAAEP,KAAK,CAACQ;AAAhC;AAAA;AAAA;AAAA;AAAA,gBAzCF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAPF,mBADF;AA8DD,CA9FD,C,CAiGA;;;AACA,OAAO,eAAeC,kBAAf,CAAkCC,OAAlC,EAA2C;AAChD;AACA,QAAM;AAAEF,IAAAA;AAAF,MAASE,OAAO,CAACC,KAAvB,CAFgD,CAGhD;;AACA,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,0CAA0CL,EAA1C,GAA+C,6GAAhD,CAAvB;AACA,QAAML,IAAI,GAAG,MAAMS,GAAG,CAACE,IAAJ,EAAnB,CALgD,CAOhD;;AACA,SAAO;AAAEd,IAAAA,KAAK,EAAE;AAAEG,MAAAA,IAAF;AAAQK,MAAAA;AAAR;AAAT,GAAP;AACD;AAGD,eAAeT,UAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useRouter } from \"next/router\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Slider from \"react-slick\";\r\n\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport Link from 'next/link';\r\nimport CardVideosGrid from '../../components/Cards/CardVideosGrid';\r\nimport Leaderboard from '../../components/Ads/Leaderboard';\r\n\r\n\r\n// components\r\n\r\nconst playlistid = (props) => {\r\n\r\n\r\n  // const router = useRouter()\r\n  //  const {id} = router.query;\r\n\r\n  const [playlists, setPlaylist] = useState(props.data);\r\n  const [isloading, setisloading] = useState(false);\r\n\r\n  //       useEffect(() => {\r\n  //         // const count = 0;\r\n\r\n  //         if(playlists == null){ \r\n  // \t\t\t// alert(props.id);\r\n\r\n  //          fetch('https://api.dailymotion.com/playlist/'+id+'/videos?fields=thumbnail_240_url%2Ctitle%2Cid%2Cviews_total%2Cduration%2Cowner.screenname%2Cowner&limit=9').then((resp) => {\r\n\r\n  //         resp.json().then((result) => {\r\n  //             setPlaylist(result);\r\n  // \t\tsetisloading(true);\r\n  // \t\tconsole.log(result)\r\n\r\n\r\n  //   })\r\n\r\n\r\n  //   }) }\r\n\r\n  // })\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n      {/* <h2 className=\"text-2xl mb-5 heading text-white font-semibold leading-normal\">\r\n              {title}\r\n          </h2> */}\r\n\r\n\r\n      <section class=\"text-gray-600 body-font bg-black\">\r\n        <div class=\"container px-5 py-24 mx-auto\">\r\n          <center>\r\n            <Leaderboard />\r\n          </center>\r\n          <h3 className=\"text-xl font-bold text-white truncate\">\r\n            {playlists.list.title}\r\n          </h3>\r\n          {/* <div className=\"flex flex-wrap\">\r\n    {playlists ? playlists.list.map((item, i) => \r\n       <div className=\"w-full lg:w-3/12 sm:w-1/12 px-2 py-2\">\r\n      \r\n        \r\n      <Link href={{\r\n           pathname: \"/video/\"+item.id,\r\n          }}\r\n          state={{ titles: \"item.title\" }}\r\n       \r\n          as={`video/${item.id}/${item.title}`}\r\n          >\r\n          <div className=\"Extra\">\r\n          <img\r\n                  alt=\"...\"\r\n                  src={item.thumbnail_240_url}\r\n                  className=\"w-full align-middle rounded-t-lg\"\r\n                />\r\n                \r\n                  <h4 className=\"text-xl font-bold text-white line-clamp-2\">\r\n                    {item.title}\r\n                  </h4>\r\n                  <p className=\"text-md font-light mt-2 text-white\">\r\n                    Putting together a page has never been easier than matching\r\n                    \r\n                  </p>\r\n         \r\n          </div>\r\n          </Link>\r\n        \r\n      </div>\r\n      ) : null }\r\n   </div> */}\r\n\r\n          <CardVideosGrid category={props.id} />\r\n        </div>\r\n      </section>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n// This gets called on every request\r\nexport async function getServerSideProps(context) {\r\n  // console.log(context.query);\r\n  const { id } = context.query;\r\n  // Fetch data from external API\r\n  const res = await fetch('https://api.dailymotion.com/playlist/' + id + '/videos?fields=thumbnail_240_url%2Ctitle%2Cid%2Cviews_total%2Cduration%2Cowner.screenname%2Cowner&limit=100')\r\n  const data = await res.json()\r\n\r\n  // Pass data to the page via props\r\n  return { props: { data, id } }\r\n}\r\n\r\n\r\nexport default playlistid;"]},"metadata":{},"sourceType":"module"}