{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"G:\\\\VOD\\\\digital video\\\\components\\\\Cards\\\\CardVideos.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from \"prop-types\";\nimport Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport Link from 'next/link'; // components\n\nexport default function CardVideos({\n  color,\n  title,\n  user,\n  category,\n  latest\n}) {\n  const settings = {\n    dots: true,\n    centerMode: false,\n    navigation: false,\n    infinite: true,\n    autoplay: false,\n    speed: 500,\n    slidesToShow: 4,\n    slidesToScroll: 1,\n    pauseOnHover: true,\n    fade: false,\n    responsive: [{\n      breakpoint: 1200,\n      settings: {\n        slidesToShow: 5,\n        slidesToScroll: 1,\n        initialSlide: 1\n      }\n    }, {\n      breakpoint: 1000,\n      settings: {\n        slidesToShow: 5,\n        slidesToScroll: 1,\n        initialSlide: 1\n      }\n    }, {\n      breakpoint: 600,\n      settings: {\n        slidesToShow: 3,\n        slidesToScroll: 1,\n        initialSlide: 1\n      }\n    }]\n  }; // alert(category);\n  // alert(process.env.channel);\n\n  const {\n    0: playlists,\n    1: setPlaylist\n  } = useState(null);\n  const {\n    0: isloading,\n    1: setisloading\n  } = useState(false);\n  let url = '';\n\n  if (category == 'latest') {\n    url = 'https://api.dailymotion.com/user/' + process.env.channel + '/videos?fields=owner%2Cthumbnail_180_url%2Cid%2Cthumbnail_240_url%2Cthumbnail_360_url%2Ctitle%2Cid%2Cviews_total%2Cduration%2Cowner.screenname%2Cdescription&limit=9';\n  } else {\n    url = 'https://api.dailymotion.com/playlist/' + category + '/videos?fields=owner%2Cthumbnail_180_url%2Cid%2Cthumbnail_240_url%2Cthumbnail_360_url%2Ctitle%2Cid%2Cviews_total%2Cduration%2Cowner.screenname%2Cdescription&limit=9';\n  }\n\n  useEffect(() => {\n    // const count = 0;\n    if (playlists == null) {\n      // alert(props.id);\n      fetch(url).then(resp => {\n        resp.json().then(result => {\n          setPlaylist(result);\n          setisloading(true);\n          console.log(result);\n        });\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl mb-5 heading text-white font-semibold leading-normal\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Slider, _objectSpread(_objectSpread({}, settings), {}, {\n        children: playlists ? playlists.list.map((item, i) => /*#__PURE__*/_jsxDEV(Link, {\n          href: {\n            pathname: \"/video/\" + item.id\n          } // state={{ titles: \"item.title\" }}\n          // as={`video?id=${item.id}`}\n          ,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Extra cursor-pointer\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              alt: \"...\",\n              src: item.thumbnail_240_url,\n              className: \"w-full align-middle rounded-t-lg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"text-xl font-bold text-white truncate\",\n              children: item.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)) : null\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true);\n}","map":{"version":3,"sources":["G:/VOD/digital video/components/Cards/CardVideos.js"],"names":["React","useState","useEffect","PropTypes","Slider","Link","CardVideos","color","title","user","category","latest","settings","dots","centerMode","navigation","infinite","autoplay","speed","slidesToShow","slidesToScroll","pauseOnHover","fade","responsive","breakpoint","initialSlide","playlists","setPlaylist","isloading","setisloading","url","process","env","channel","fetch","then","resp","json","result","console","log","list","map","item","i","pathname","id","thumbnail_240_url"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,OAAO,gCAAP;AACA,OAAO,sCAAP;AACA,OAAOC,IAAP,MAAiB,WAAjB,C,CAGA;;AAGA,eAAe,SAASC,UAAT,CAAoB;AAAEC,EAAAA,KAAF;AAASC,EAAAA,KAAT;AAAgBC,EAAAA,IAAhB;AAAsBC,EAAAA,QAAtB;AAA+BC,EAAAA;AAA/B,CAApB,EAA6D;AAExE,QAAMC,QAAQ,GAAG;AACbC,IAAAA,IAAI,EAAE,IADO;AAEbC,IAAAA,UAAU,EAAE,KAFC;AAGbC,IAAAA,UAAU,EAAE,KAHC;AAIbC,IAAAA,QAAQ,EAAE,IAJG;AAKbC,IAAAA,QAAQ,EAAE,KALG;AAMbC,IAAAA,KAAK,EAAE,GANM;AAObC,IAAAA,YAAY,EAAE,CAPD;AAQbC,IAAAA,cAAc,EAAE,CARH;AASbC,IAAAA,YAAY,EAAE,IATD;AAUbC,IAAAA,IAAI,EAAE,KAVO;AAWbC,IAAAA,UAAU,EAAE,CACjB;AACCC,MAAAA,UAAU,EAAE,IADb;AAECZ,MAAAA,QAAQ,EAAE;AACTO,QAAAA,YAAY,EAAE,CADL;AAETC,QAAAA,cAAc,EAAE,CAFP;AAGTK,QAAAA,YAAY,EAAE;AAHL;AAFX,KADiB,EASjB;AACCD,MAAAA,UAAU,EAAE,IADb;AAECZ,MAAAA,QAAQ,EAAE;AACTO,QAAAA,YAAY,EAAE,CADL;AAETC,QAAAA,cAAc,EAAE,CAFP;AAGTK,QAAAA,YAAY,EAAE;AAHL;AAFX,KATiB,EAiBjB;AACCD,MAAAA,UAAU,EAAE,GADb;AAECZ,MAAAA,QAAQ,EAAE;AACTO,QAAAA,YAAY,EAAE,CADL;AAETC,QAAAA,cAAc,EAAE,CAFP;AAGTK,QAAAA,YAAY,EAAE;AAHL;AAFX,KAjBiB;AAXC,GAAjB,CAFwE,CA0CtE;AACA;;AACA,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA2B1B,QAAQ,CAAC,IAAD,CAAzC;AACA,QAAM;AAAA,OAAC2B,SAAD;AAAA,OAAYC;AAAZ,MAA4B5B,QAAQ,CAAC,KAAD,CAA1C;AACA,MAAI6B,GAAG,GAAG,EAAV;;AACA,MAAGpB,QAAQ,IAAI,QAAf,EAAwB;AAClBoB,IAAAA,GAAG,GAAG,sCAAqCC,OAAO,CAACC,GAAR,CAAYC,OAAjD,GAA0D,sKAAhE;AACL,GAFD,MAGK;AACDH,IAAAA,GAAG,GAAG,0CAAwCpB,QAAxC,GAAiD,sKAAvD;AACH;;AACDR,EAAAA,SAAS,CAAC,MAAM;AACd;AAEA,QAAGwB,SAAS,IAAI,IAAhB,EAAqB;AAC1B;AAEMQ,MAAAA,KAAK,CAACJ,GAAD,CAAL,CAAWK,IAAX,CAAiBC,IAAD,IAAU;AAE3BA,QAAAA,IAAI,CAACC,IAAL,GAAYF,IAAZ,CAAkBG,MAAD,IAAY;AACzBX,UAAAA,WAAW,CAACW,MAAD,CAAX;AACVT,UAAAA,YAAY,CAAC,IAAD,CAAZ;AACAU,UAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AAGC,SANK;AASL,OAXM;AAWH;AAEL,GAnBc,CAAT;AAuBJ,sBACE;AAAA,4BAEI;AAAI,MAAA,SAAS,EAAC,+DAAd;AAAA,gBACO9B;AADP;AAAA;AAAA;AAAA;AAAA,YAFJ,eAMJ;AAAA,6BACQ,QAAC,MAAD,kCAAYI,QAAZ;AAAA,kBAECc,SAAS,GAAGA,SAAS,CAACe,IAAV,CAAeC,GAAf,CAAmB,CAACC,IAAD,EAAOC,CAAP,kBAC9B,QAAC,IAAD;AAAM,UAAA,IAAI,EAAE;AACXC,YAAAA,QAAQ,EAAE,YAAUF,IAAI,CAACG;AADd,WAAZ,CAGA;AAEA;AALA;AAAA,iCAOA;AAAK,YAAA,SAAS,EAAC,sBAAf;AAAA,oCACA;AACQ,cAAA,GAAG,EAAC,KADZ;AAEQ,cAAA,GAAG,EAAEH,IAAI,CAACI,iBAFlB;AAGQ,cAAA,SAAS,EAAC;AAHlB;AAAA;AAAA;AAAA;AAAA,oBADA,eAOQ;AAAI,cAAA,SAAS,EAAC,uCAAd;AAAA,wBACGJ,IAAI,CAACnC;AADR;AAAA;AAAA;AAAA;AAAA,oBAPR;AAAA;AAAA;AAAA;AAAA;AAAA;AAPA;AAAA;AAAA;AAAA;AAAA,gBADW,CAAH,GAyBD;AA3BT;AAAA;AAAA;AAAA;AAAA;AADR;AAAA;AAAA;AAAA;AAAA,YANI;AAAA,kBADF;AA2CD","sourcesContent":["import React, {useState, useEffect } from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Slider from \"react-slick\";\r\n\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport Link from 'next/link';\r\n\r\n\r\n// components\r\n\r\n\r\nexport default function CardVideos({ color, title, user, category,latest }) {\r\n\r\n    const settings = {\r\n        dots: true,\r\n        centerMode: false,\r\n        navigation: false,\r\n        infinite: true,\r\n        autoplay: false,\r\n        speed: 500,\r\n        slidesToShow: 4,\r\n        slidesToScroll: 1,\r\n        pauseOnHover: true,\r\n        fade: false,\r\n        responsive: [\r\n\t\t\t{\r\n\t\t\t\tbreakpoint: 1200,\r\n\t\t\t\tsettings: {\r\n\t\t\t\t\tslidesToShow: 5,\r\n\t\t\t\t\tslidesToScroll: 1,\r\n\t\t\t\t\tinitialSlide: 1,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tbreakpoint: 1000,\r\n\t\t\t\tsettings: {\r\n\t\t\t\t\tslidesToShow: 5,\r\n\t\t\t\t\tslidesToScroll: 1,\r\n\t\t\t\t\tinitialSlide: 1,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tbreakpoint: 600,\r\n\t\t\t\tsettings: {\r\n\t\t\t\t\tslidesToShow: 3,\r\n\t\t\t\t\tslidesToScroll: 1,\r\n\t\t\t\t\tinitialSlide: 1,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t],\r\n      };\r\n\r\n\r\n      // alert(category);\r\n      // alert(process.env.channel);\r\n      const [playlists, setPlaylist] = useState(null);\r\n      const [isloading, setisloading] = useState(false);\r\n      let url = '';\r\n      if(category == 'latest'){\r\n            url = 'https://api.dailymotion.com/user/'+ process.env.channel +'/videos?fields=owner%2Cthumbnail_180_url%2Cid%2Cthumbnail_240_url%2Cthumbnail_360_url%2Ctitle%2Cid%2Cviews_total%2Cduration%2Cowner.screenname%2Cdescription&limit=9';\r\n      }\r\n      else {\r\n          url = 'https://api.dailymotion.com/playlist/'+category+'/videos?fields=owner%2Cthumbnail_180_url%2Cid%2Cthumbnail_240_url%2Cthumbnail_360_url%2Ctitle%2Cid%2Cviews_total%2Cduration%2Cowner.screenname%2Cdescription&limit=9';\r\n      }\r\n      useEffect(() => {\r\n        // const count = 0;\r\n        \r\n        if(playlists == null){ \r\n\t\t\t// alert(props.id);\r\n            \r\n         fetch(url).then((resp) => {\r\n\r\n        resp.json().then((result) => {\r\n            setPlaylist(result);\r\n\t\tsetisloading(true);\r\n\t\tconsole.log(result)\r\n          \r\n     \r\n  })\r\n\r\n\r\n  }) }\r\n\r\n})\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n        <h2 className=\"text-2xl mb-5 heading text-white font-semibold leading-normal\">\r\n              {title}\r\n          </h2>\r\n\r\n<div>\r\n        <Slider {...settings}>\r\n\r\n        {playlists ? playlists.list.map((item, i) => (\r\n          <Link href={{\r\n           pathname: \"/video/\"+item.id,\r\n          }}\r\n          // state={{ titles: \"item.title\" }}\r\n       \r\n          // as={`video?id=${item.id}`}\r\n          >\r\n          <div className=\"Extra cursor-pointer\">\r\n          <img\r\n                  alt=\"...\"\r\n                  src={item.thumbnail_240_url}\r\n                  className=\"w-full align-middle rounded-t-lg\"\r\n                />\r\n                \r\n                  <h4 className=\"text-xl font-bold text-white truncate\">\r\n                    {item.title}\r\n                  </h4>\r\n                  {/* <p className=\"text-md font-light mt-2 text-white\">\r\n                    Putting together a page has never been easier than matching\r\n                    \r\n                  </p> */}\r\n         \r\n          </div>\r\n          </Link>\r\n            )) : null }\r\n          \r\n        </Slider>\r\n      </div>\r\n\r\n  \r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}