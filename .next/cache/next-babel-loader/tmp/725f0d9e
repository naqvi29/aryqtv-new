{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from 'react';\nimport Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport Link from 'next/link';\nexport default function MainSlider() {\n  const settings = {\n    dots: false,\n    className: \"center\",\n    centerMode: false,\n    navigation: true,\n    infinite: true,\n    autoplay: false,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    pauseOnHover: true,\n    fade: true,\n    borderRadius: 10\n  };\n  const {\n    0: playlists,\n    1: setPlaylist\n  } = useState(null);\n  const {\n    0: isloading,\n    1: setisloading\n  } = useState(false);\n  useEffect(() => {\n    // const count = 0;\n    if (playlists == null) {\n      // alert(props.ids);\n      fetch(process.env.mainslider).then(resp => {\n        resp.json().then(result => {\n          setPlaylist(result);\n          setisloading(true);\n          console.log(result);\n        });\n      });\n    }\n  });\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/_jsx(\"div\", {\n      children: /*#__PURE__*/_jsx(Slider, _objectSpread(_objectSpread({}, settings), {}, {\n        children: playlists ? playlists.map((item, i) => /*#__PURE__*/_jsx(\"div\", {\n          children: /*#__PURE__*/_jsx(Link, {\n            href: item.link,\n            children: /*#__PURE__*/_jsx(\"img\", {\n              src: item.image\n            })\n          })\n        })) : null\n      }))\n    })\n  });\n}","map":null,"metadata":{},"sourceType":"module"}